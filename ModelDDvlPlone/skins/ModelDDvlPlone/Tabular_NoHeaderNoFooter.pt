<tal:block replace="nothing">
# -*- coding: utf-8 -*-
#
# File: Tabular_NoHeaderNoFooter.pt
#
# Copyright (c) 2008 by 2008 Model Driven Development sl and Antonio Carrasco Valero
#
# GNU General Public License (GPL)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# Authors: 
# Model Driven Development sl  Valencia (Spain) www.ModelDD.org 
# Antonio Carrasco Valero                       carrasco@ModelDD.org
#
</tal:block>

<tal:block tal:replace="nothing">
<metal:block metal:use-macro="here/Tabular_inner/macros/tTabularInner" />
</tal:block>

<tal:block 
	tal:define="
		pPasteRequested             pPasteRequested | python: False;
		global pPerformanceAnalysis         pPerformanceAnalysis | python: {};
		pViewParms python: {
			'theModelDDvlPloneTool': here.ModelDDvlPlone_tool,
			'thePerformanceAnalysis':pPerformanceAnalysis,
			'theBrowsedElement':     here, 
			'theTraversalName':      here.REQUEST.get('theTraversalName',      None,),
			'theReferenceFieldName': here.REQUEST.get('theReferenceFieldName', None,),
			'theRelationCursorName': here.REQUEST.get('theRelationCursorName', None,),
			'theCurrentElementUID':  here.REQUEST.get('theCurrentElementUID',  None,),
			'theRequest':            here.REQUEST, 
			'thePasteRequested':     here.REQUEST.get('', False,),
			'theGroupAction':        here.REQUEST.get('', False,),
			'theUIDs':               here.REQUEST.get('', False,),
			'theMovedElementID':     here.REQUEST.get('theMovedElementID',    None,),
			'theMovedObjectUID':     here.REQUEST.get('theMovedObjectUID',    None,),
			'theMovedReferenceUID':  here.REQUEST.get('theMovedReferenceUID', None,),
			'theMoveDirection':      here.REQUEST.get('theMoveDirection',     None,),
			'theTranslationsCache':  None,
			'thePermissionsCache':   None, 
			'theRolesCache':         None,
			'theParentExecutionRecord':None,
			'thePasteRequested':     pPasteRequested,
			'theClearClipboard':     here.REQUEST.get('theClearClipboard',     None,),
			'theGroupAction':        here.REQUEST.get('theGroupAction',        None,),
			'theGroupUIDs':          here.REQUEST.get('theUIDs',        None,),
			'theAdditionalParms':    { },
			'xxxtheCustomMethodBindings': { 
				'xxxMDDRender_Clipboard':                'gvSIGbpd_creditos_i18n_view',
				'xxxMDDRender_Tabular_Cabecera_Cursor':  'eval 123456789',
				'xxxMDDExtension_Before':                'MDDTryExtension',         
				'xxxMDDExtension_Render_Tabular_After':     'eval theModelDDvlPloneTool.fTestAddedMethod2()',
				'MDDExtension_After': [       
					'exec theRdCtxt.pOS( str( 9999999999999))',
					'MDDTryExtension', 
					'eval 1 + 2 +3 + 5 + 7+ 11', 
					'gvSIGbpd_creditos_i18n_view',
					'eval theModelDDvlPloneTool.fTestAddedMethod()',
					'MDDTryExternalMethodExtension',
				],
			},                                               
		};" 
	tal:replace="structure python: here.MDDView_Tabular( theViewParms=pViewParms)" />