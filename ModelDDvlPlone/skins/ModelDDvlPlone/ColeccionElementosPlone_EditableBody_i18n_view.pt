<tal:block replace="nothing">
# Copyright (c) 2008 by 2008 Model Driven Development sl and Antonio Carrasco Valero
#
# GNU General Public License (GPL)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# Authors: 
# Model Driven Development sl  Valencia (Spain) www.ModelDD.org 
# Antonio Carrasco Valero                       carrasco@ModelDD.org
#</tal:block>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en">
<body>


<div metal:define-macro="tColeccionElementosPlone_EditableBody_i18n" >

<tal:block tal:define="aTotalPloneElements aTotalPloneElements | python: 0"
    tal:condition="aTotalPloneElements">

|
|

---------------------------------

</tal:block>


<tal:block
    tal:define="
        global pTrue                        python: True;
        global pFalse                       python: False;
        pSiempre                            pSiempre | pFalse;    
        global pMDDTitleCounter                 pMDDTitleCounter | python: 0;
        global pMDDElementTargetCounter     pMDDElementTargetCounter | python: 0;
        pTraversalTargetsByTraversalName    pTraversalTargetsByTraversalName | python: {};
        pElementTargetsByUID                pElementTargetsByUID | python: {};
        pElementTitlesByUID                 pElementTitlesByUID | python: {};
        PLONERES                            PLONERES | nothing;
        global  pAnyElementWithView         pFalse"
    tal:condition="python: PLONERES and PLONERES[ 'traversals']" >
    <tal:block tal:repeat="TRAVRES python: PLONERES[ 'traversals']" >
        <tal:block tal:define="
            pElementos TRAVRES/elements;
            pElementosWithView  python: [ unElemento for unElemento in pElementos  if ( unElemento[ 'meta_type'] == 'ATImage' and unElemento[ 'values_by_name'][ 'content_url'][ 'value']) or ( unElemento[ 'meta_type'] == 'ATNewsItem' and unElemento[ 'values_by_name'][ 'image_url'][ 'value'])];
            global pAnyElementWithView python: pAnyElementWithView or ( len( pElementosWithView) > 0);
            pMDDTraversalTarget python: pTraversalTargetsByTraversalName.get( TRAVRES ['traversal_name'], '');
            pGoTopTarget python: pMDDTraversalTarget or 'MDDTopTg'" >
            <tal:block tal:condition="python: pSiempre or pElementos">
                <tal:block tal:condition="not: repeat/TRAVRES/start">

|
|

                </tal:block>


                <tal:block tal:replace="nothing">

                    <tal:block 
                        tal:define="pMDDGoToPloneToc python: 'MDDGPT%s' % TRAVRES ['traversal_name']"
                        tal:condition="pElementosWithView">
                        <tal:block tal:content="python: u'\n\n.. |%s| replace:: |MDDIcon_atablacontenidos| %s\n\n.. _%s:\n\n' % ( pMDDGoToPloneToc, pMsgGoToToc, pMDDGoToPloneToc, )" />
                    </tal:block> 
                </tal:block> 
                    
                <tal:block 
                    tal:condition="pMDDTraversalTarget" 
                    tal:content="structure python: u'\n\n.. _%s:\n\n' % pMDDTraversalTarget"/>    

                <tal:block  tal:content="python: u'\n\n**%s** |MDDTopTg|_\n\n' % TRAVRES[ 'traversal_translations'][ 'translated_label'].strip()" />                    
                    
                <tal:block tal:repeat="unElemento python: pElementos">
                
                    <tal:block 
                        tal:define="
                            global pMDDTitleCounter python: pMDDTitleCounter + 1; 
                            pMDDTitleText python: 'MDDTitleTxt%d' % pMDDTitleCounter;
                            dummy python: pElementTitlesByUID.update( { unElemento[ 'UID']: pMDDTitleText,})" >
                        <tal:block tal:content="python: u'\n\n.. |%s| replace:: |PloneIcon_%s| %s (%s)\n\n' % ( pMDDTitleText, unElemento[ 'meta_type'], unElemento[ 'values_by_name'][ 'title'][ 'uvalue'].strip(), unElemento[ 'type_translations'][ 'translated_archetype_name'])" />
                        <tal:block tal:content="python: u'\n\n.. _`%s`: %s\n\n' % ( unElemento[ 'values_by_name'][ 'title'][ 'uvalue'].strip(), unElemento[ 'url'],)" />
                        <tal:block 
                            tal:define="
                                global pMDDTitleCounter python: pMDDTitleCounter + 1; 
                                pMDDTitleInToc python: 'MDDTitlePloneToc%d' % pMDDTitleCounter;
                                global pMDDTitleCounter python: pMDDTitleCounter + 1; 
                                pMDDURLInToc python: 'MDDURLPloneToc%d' % pMDDTitleCounter;
                                global pMDDElementTargetCounter python: pMDDElementTargetCounter + 1; 
                                pMDDElementTarget python: 'MDDPloneTg%d' % pMDDElementTargetCounter;
                                dummy python: pElementTargetsByUID.update( { unElemento[ 'UID']: pMDDElementTarget,})" >

                            <tal:block tal:condition="python: unElemento[ 'meta_type'] == 'ATLink' and unElemento[ 'values_by_name'][ 'content_url'][ 'value']" >
                                <tal:block tal:content="python: u'\n\n.. |%s| replace:: |MDDIcon_url| ``%s``\n\n' % ( pMDDURLInToc, unElemento[ 'values_by_name'][ 'content_url'][ 'value'],)" />
                                <tal:block tal:content="python: u'\n\n.. _%s: %s\n\n' % ( pMDDURLInToc, unElemento[ 'values_by_name'][ 'content_url'][ 'value'].strip(),)" />
                            </tal:block>

                            
                            <tal:block tal:content="python: u'\n\n.. |%s| replace:: |PloneIcon_%s| **%s** *(%s)*\n\n' % ( pMDDTitleInToc, unElemento[ 'meta_type'], unElemento[ 'values_by_name'][ 'title'][ 'uvalue'].strip(), unElemento[ 'type_translations'][ 'translated_archetype_name'],)" />
                            
                            
                            <tal:block tal:condition="python: ( unElemento[ 'meta_type'] == 'ATImage' and unElemento[ 'values_by_name'][ 'content_url'][ 'value']) or ( unElemento[ 'meta_type'] == 'ATNewsItem' and unElemento[ 'values_by_name'][ 'image_url'][ 'value'])" >
                                <tal:block tal:content="python: u'\n\n.. _%s: %s_\n\n' % (  pMDDTitleInToc, pMDDElementTarget,)" />
                            </tal:block> 
                            <tal:block tal:condition="python: not (( unElemento[ 'meta_type'] == 'ATImage' and unElemento[ 'values_by_name'][ 'content_url'][ 'value']) or ( unElemento[ 'meta_type'] == 'ATNewsItem' and unElemento[ 'values_by_name'][ 'image_url'][ 'value']))" >
                                <tal:block tal:content="python: u'\n\n.. _%s: `%s`_\n\n' % (  pMDDTitleInToc, unElemento[ 'values_by_name'][ 'title'][ 'uvalue'].strip(),)" />
                            </tal:block> 
                            
                            
                            <tal:block tal:condition="python: unElemento[ 'meta_type'] == 'ATLink' and unElemento[ 'values_by_name'][ 'content_url'][ 'value']" >
                                <tal:block tal:content="python: u'\n\n- |%s|_ |%s|_\n\n' % ( pMDDTitleInToc, pMDDURLInToc, )" />
                            </tal:block>
                            <tal:block tal:condition="python: not ( unElemento[ 'meta_type'] == 'ATLink' and unElemento[ 'values_by_name'][ 'content_url'][ 'value'])" >
                                <tal:block tal:content="python: u'\n\n- |%s|_ \n\n' % ( pMDDTitleInToc, )" />
                            </tal:block>

                
<tal:block 
                                tal:condition="python:  unElemento['values_by_name'][ 'description'][ 'uvalue'].strip().splitlines()"
                                tal:repeat="unaLineaTexto python:  unElemento['values_by_name'][ 'description'][ 'uvalue'].strip().splitlines()"
                                tal:content="python: '  %s' % unaLineaTexto.strip()" />
                
                        </tal:block>
                    </tal:block>
                </tal:block>
            </tal:block>
        </tal:block>
    </tal:block>


       
|
|



    <tal:block tal:condition="python: pAnyElementWithView">

    
---------------------------------


    </tal:block>



    <tal:block tal:repeat="TRAVRES python: PLONERES[ 'traversals']" >
        <tal:block tal:define="
            pElementos TRAVRES/elements; 
            pMDDTraversalTarget python: pTraversalTargetsByTraversalName.get( TRAVRES ['traversal_name'], '');
            pGoTopTarget python: pMDDTraversalTarget or 'MDDTopTg'" >
            <tal:block tal:condition="python: pSiempre or pElementos">
                
                <tal:block tal:repeat="unElemento python: pElementos">
                
                    <tal:block tal:condition="python: ( unElemento[ 'meta_type'] == 'ATImage' and unElemento[ 'values_by_name'][ 'content_url'][ 'value']) or ( unElemento[ 'meta_type'] == 'ATNewsItem' and unElemento[ 'values_by_name'][ 'image_url'][ 'value'])" >

                        <tal:block tal:condition="not: repeat/unElemento/start">

|
|

                        </tal:block>

                  
                        <tal:block tal:define="pMDDElementTarget python: pElementTargetsByUID.get( unElemento[ 'UID'], '')"
                            tal:condition="pMDDElementTarget" 
                            tal:content="structure python: u'\n\n.. _%s:\n\n' % pMDDElementTarget"/>    
                            
                            
                            
                        <tal:block 
                            tal:define="
                                xxxxxxx___pMDDGoToPloneToc python: 'MDDGPT%s' % TRAVRES ['traversal_name'];                            
                                global pMDDTitleCounter python: pMDDTitleCounter + 1; 
                                pMDDTitlePloneElement python: 'MDDTitlePlone%d' % pMDDTitleCounter" >
                            <tal:block tal:content="python: u'\n\n.. |%s| replace:: |PloneIcon_%s| **%s** *(%s)* \n\n' % ( pMDDTitlePloneElement, unElemento[ 'meta_type'], unElemento[ 'values_by_name'][ 'title'][ 'uvalue'].strip(), unElemento[ 'type_translations'][ 'translated_archetype_name'].strip(), )" />
                            <tal:block tal:content="python: u'\n\n.. _%s: `%s`_\n\n' % ( pMDDTitlePloneElement, unElemento[ 'values_by_name'][ 'title'][ 'uvalue'].strip())" />
                            <tal:block tal:content="python: u'\n\n|%s|_  |MDDIcon_atablacontenidos| |%s|_\n\n' % ( pMDDTitlePloneElement, pMDDTraversalTarget, )" />
                            
                        </tal:block>
<tal:block 
                        tal:condition="python:  unElemento['values_by_name'][ 'description'][ 'uvalue'].strip().splitlines()"
                        tal:repeat="unaLineaTexto python:  unElemento['values_by_name'][ 'description'][ 'uvalue'].strip().splitlines()"
                        tal:content="python: '%s' % unaLineaTexto.strip()" />
                    </tal:block>
        
        
                    <tal:block tal:condition="python: unElemento[ 'meta_type'] == 'ATImage' and unElemento[ 'values_by_name'][ 'content_url'][ 'value']" >
                        
                      <tal:block tal:content="string:${unElemento/values_by_name/width/attribute_translations/translated_label} ${unElemento/values_by_name/width/value} x ${unElemento/values_by_name/height/attribute_translations/translated_label} ${unElemento/object/height}"/>
 
                        <tal:block 
                            tal:define="
                                unWidth python:  (( unElemento[ 'values_by_name'][ 'width'][ 'value'] > 800) and 800) or ( unElemento[ 'values_by_name'][ 'width'][ 'value']);
                                unHeight python: (( unElemento[ 'values_by_name'][ 'width'][ 'value'] > 800) and  int( unElemento[ 'values_by_name'][ 'height'][ 'value'] * 800 / unElemento[ 'values_by_name'][ 'width'][ 'value'])) or  unElemento[ 'values_by_name'][ 'height'][ 'value']"                        
                            tal:content="structure python: '\n\n.. image:: %s\n    :width: %d\n    :height: %d\n    :target: %s\n' % ( unElemento[ 'values_by_name'][ 'content_url'][ 'value'], unWidth, unHeight, unElemento[ 'values_by_name'][ 'content_url'][ 'value'] )"/>
                    </tal:block>

                    
                    
                    <tal:block tal:condition="python: unElemento[ 'meta_type'] == 'ATNewsItem' and unElemento[ 'values_by_name'][ 'image_url'][ 'value']" >
 
                        <tal:block 
                            tal:define="
                                unWidth python:  ( ( unElemento[ 'values_by_name'][ 'width'][ 'value'] > 800) and 800) or  unElemento[ 'values_by_name'][ 'width'][ 'value'];
                                unHeight python: ( ( unElemento[ 'values_by_name'][ 'width'][ 'value'] > 800) and int( unElemento[ 'values_by_name'][ 'height'][ 'value'] * 800 / unElemento[ 'values_by_name'][ 'width'][ 'value'])) or unElemento[ 'values_by_name'][ 'height'][ 'value']"                        
                            tal:content="structure python: '\n.. image:: %s\n    :width: %d\n    :height: %d\n    :target: %s\n' % ( unElemento[ 'values_by_name'][ 'image_url'][ 'value'], unWidth, unHeight, unElemento[ 'values_by_name'][ 'image_url'][ 'value'] )"/>
                    </tal:block>

                
                    
                    
                </tal:block>
            </tal:block>
        </tal:block>
    </tal:block>
</tal:block>      
</div>





</body>
</html>    
