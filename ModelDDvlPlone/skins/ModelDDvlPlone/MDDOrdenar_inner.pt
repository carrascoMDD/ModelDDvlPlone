<tal:block replace="nothing">
# -*- coding: utf-8 -*-
#
# File: MDDOrdenar_inner.pt
#
# Copyright (c) 2008 by 2008 Model Driven Development sl and Antonio Carrasco Valero
#
# GNU General Public License (GPL)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
#
# Authors: 
# Model Driven Development sl  Valencia (Spain) www.ModelDD.org 
# Antonio Carrasco Valero                       carrasco@ModelDD.org
#
</tal:block>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en">
<body>


    <div metal:define-macro="tOrdenarInner" >
    
    
        <metal:block metal:use-macro="here/PerformanceAnalysis/macros/tSetupPerformanceAnalysis" />   
 
 
        <tal:block tal:define="pPasteRequested pPasteRequested | nothing">
            <tal:block tal:condition="pPasteRequested">
                <tal:block tal:define="
                    pForm request/form;
                    pRetrievalStartTime  python: here.ModelDDvlPlone_tool.fMillisecondsNow();
                    pProfilingResults    python: (pPerformanceAnalysis or {}).get( 'profiling_results', None);
                    unosArgs python: {
                    'theTimeProfilingResults' :pProfilingResults,
                    'theContainerObject'      :here, 
                    'theAdditionalParams'     :None, }; 
                    pRefactorReport python: here.ModelDDvlPlone_tool.fObjectPaste( **unosArgs)" >
                    <tal:block tal:define="pRefactorLabel string:Paste">
                        <metal:block metal:use-macro="here/MDDRefactorResultsDump_i18n_view/macros/tMDDRefactorResultsDump_i18n_view" />   
                    </tal:block>
               </tal:block>
            </tal:block>
            <tal:block tal:condition="not: pPasteRequested">
                <tal:block tal:define="
                    pForm request/form;
                    pGroupAction         python: pForm.get( 'theGroupAction', '');
                    pGroupUIDs           python: pForm.get( 'theUIDs', []);
                    pRetrievalStartTime  python: here.ModelDDvlPlone_tool.fMillisecondsNow();
                    pProfilingResults    python: (pPerformanceAnalysis or {}).get( 'profiling_results', None);
                    unosArgs python: {
                    'theTimeProfilingResults' :pProfilingResults,
                    'theContainerObject'      :here, 
                    'theGroupAction'          :pGroupAction,
                    'theGroupUIDs'            :pGroupUIDs,
                    'theAdditionalParams'     :None, }; 
                    pGroupActionReport python: here.ModelDDvlPlone_tool.fGroupAction( **unosArgs)" />
            </tal:block>
        </tal:block>
 
        

        <tal:block tal:define=" global pTrue            python: True;
                                global pFalse           python: False;
                                global pPagina          string:Tabular;
                                global pPaginaAnteriorPosterior pPagina;
                                global pShowTrees       pFalse;
                                global pStartTime python: here.ModelDDvlPlone_tool.fMillisecondsNow()" />
                                
                                
        <tal:block tal:condition="python: request.cookies.has_key('ShowTrees')" >
            <tal:block tal:condition="python: request.cookies[ 'ShowTrees'].lower() == 'yes'">
                <tal:block tal:define="global pShowTrees python: True" />
            </tal:block>     
            <tal:block tal:condition="python: not( request.cookies[ 'ShowTrees'].lower() == 'yes')">
                <tal:block tal:define="global pShowTrees python: False" />
            </tal:block>     
        </tal:block>     
        <tal:block tal:condition="python: request.form.has_key('ShowTrees')">
            <tal:block tal:define="dummy python: request.RESPONSE.setCookie('ShowTrees', 'yes');
                                   global pShowTrees python: True" />            
        </tal:block>     
        <tal:block tal:condition="python: request.form.has_key('HideTrees')">
            <tal:block tal:define="dummy python: request.RESPONSE.setCookie('ShowTrees', 'no');
                                   global pShowTrees python: False" />            
        </tal:block> 
        <tal:block tal:condition="python: not( request.cookies.has_key('ShowTrees') and  (request.cookies[ 'ShowTrees'].lower() == 'yes') == pShowTrees)" >
            <tal:block tal:condition="python: pShowTrees" >
                <tal:block tal:define="dummy python: request.RESPONSE.setCookie('ShowTrees', 'yes', path='/')" />
            </tal:block> 
            <tal:block tal:condition="python: not pShowTrees" >
                <tal:block tal:define="dummy python: request.RESPONSE.setCookie('ShowTrees', 'no', path='/')" />
            </tal:block> 
        </tal:block> 

    
        <tal:block tal:condition="pShowTrees" >
             <tal:block tal:define="global pTreesFeatureFilter python: [ 'trees']" />   
        </tal:block>     
        <tal:block tal:condition="not: pShowTrees" >
             <tal:block tal:define="global pTreesFeatureFilter python: [ ]" />   
        </tal:block>     
    

        <tal:block tal:define="
            pRetrievalStartTime  python: here.ModelDDvlPlone_tool.fMillisecondsNow();
            pProfilingResults python: (pPerformanceAnalysis or {}).get( 'profiling_results', None);
            unosArgs python: { 
                'theTimeProfilingResults'     :pProfilingResults,
                'theElement'                  :here, 
                'theParent'                   :None,
                'theParentTraversalName'      :'',
                'theTypeConfig'               :None, 
                'theAllTypeConfigs'           :None, 
                'theViewName'                 :'Tabular', 
                'theRetrievalExtents'         :[ 'owner', 'cursor', ] ,
                'theWritePermissions'         :[ 'object',  ],
                'theFeatureFilters'           :{ 'objectValues': True, 'aggregations' : [], 'relations': [], 'attrs': [ 'title', 'description',],}, 
                'theInstanceFilters'          :None,
                'theTranslationsCaches'       :None,
                'theCheckedPermissionsCache'  :None,
                'theAdditionalParams'         :None, };    
            SRES  python: here.ModelDDvlPlone_tool.fRetrieveTypeConfig( **unosArgs);
            pRetrievalEndTime  python: here.ModelDDvlPlone_tool.fMillisecondsNow();
            pPermiteEditar  python: SRES[ 'read_permission'] and SRES[ 'write_permission']; 
            pPermiteEliminar python: SRES[ 'read_permission'] and SRES[ 'write_permission'] and SRES[ 'delete_permission'] and SRES[ 'container_element'][ 'read_permission'] and SRES[ 'container_element'][ 'write_permission']; 
            pShowOrHideTrees pTrue; 
            pMostrarAnteriorPosterior pTrue;
            pAllowTextualAndTabular pTrue;
            pAllowRefrescar pTrue;
            pPaginaRefrescar string:Tabular" >

 
<tal:block tal:replace="nothing">  

            <metal:block metal:use-macro="here/PerformanceAnalysis/macros/tRenderProfilingResults_HTML" />   
 
<tal:block tal:replace="structure python: here.ModelDDvlPlone_tool.fPrettyPrintHTML( here [ TRAVRES  , ], [ 'object',  'values_by_uid', 'values_by_name', 'elements_by_UID', 'elements_by_id',  'traversals_by_name', 'type_config', 'traversal_config', 'column_translations',   'vocabulary_translations', ], here.ModelDDvlPlone_tool.fPreferredResultDictKeysOrder() )" />
</tal:block>



            <metal:block metal:use-macro="here/PerformanceAnalysis/macros/tRenderRetrievalTime_HTML" />   

            <tal:block tal:define="
                pPagina                  string:Tabular;
                pPaginaAnteriorPosterior string:MDDOrdenar;
                pPaginaAnteriorPosterior string:MDDOrdenar;
                pPaginaRefrescar         string:MDDOrdenar;
                pAllowTextualAndTabular  python: True" >
                <metal:block metal:use-macro="here/CabeceraEnTabla_i18n_view/macros/tCabeceraEnTabla_i18n" />   
            </tal:block>
            
            <tal:block tal:define="
                SRES                                python: SRES or {};
                TRAVRES                             python: SRES.get( 'traversals_by_name', {}).get( 'objectValues', {});
                pTrue                               python: True; 
                pFalse                              python: False; 
                pSiempre                            pSiempre | pTrue;
                pPermiteCrearElementos              pFalse;
                pPermiteEditarElementos           pFalse;
                pPermiteOrdenarElementos          pTrue;
                pPermiteEliminarElementos         pFalse;
                pNavegarALabel                     python: here.ModelDDvlPlone_tool.fTranslateI18N( here,  'ModelDDvlPlone', 'ModelDDvlPlone_navegara_action_label', 'Navegar a')"
                tal:condition="python: TRAVRES and SRES" >
    
                <h1>
                   <span i18n:domain="plone" i18n:translate="Reorder">Reorder-</span>
                   &nbsp;        
                   <span  tal:content="TRAVRES/traversal_translations/translated_label" />
       
                </h1>
               
                <p class="formHelp"  tal:content="TRAVRES/traversal_translations/translated_description" />        
                
                <p><font color="red"><span tal:content="python: here.fTranslateI18N( 'ModelDDvlPlone', 'ModelDDvlPlone_DragAndDropReorder_Help', 'To Reorder by Drag and Drop, click and hold down the mouse button on the icon or description of the element to move to a different possition. Move the mouse up and down without letting the mouse button up until the element shows in the desired position. Then release the mouse button.-')" /></font></p>        
                
                <metal:block metal:use-macro="here/MDDOrdenar_inner/macros/tTabla_Ordenar_i18n" />
            </tal:block>


        </tal:block> 

        <metal:block metal:use-macro="here/PerformanceAnalysis/macros/tRenderProcessingTime_HTML" />   
    
    </div>
    

    
    
    
    
    
    
    
    


    <div metal:define-macro="tTabla_Ordenar_i18n" >
    
    
       <tal:block tal:define="
            SRES                              SRES | nothing;
            TRAVRES                           TRAVRES | nothing;
            PARENT_SRES                       PARENT_SRES | nothing;
            PARENT_TRAVRES                    PARENT_TRAVRES | nothing;
            pTrue                             python: True; 
            pFalse                            python: False; 
            pSiempre                          pSiempre | pTrue;
            pIdTabla                          pIdTabla | string:;
            pPermiteSeleccionarElementos      pPermiteSeleccionarElementos | pTrue;
            pPermiteCopiarElementos           pPermiteCopiarElementos | pTrue;
            pPermiteCortarElementos           pPermiteCortarElementos | pTrue;
            pPermiteCrearElementos            pPermiteCrearElementos    | pFalse;
            pPermiteEditarElementos           pPermiteEditarElementos   | pFalse;
            pPermiteOrdenarElementos          pPermiteOrdenarElementos  | pFalse;
            pPermiteEliminarElementos         pPermiteEliminarElementos | pFalse;
            pNavegarALabel            python: here.ModelDDvlPlone_tool.fTranslateI18N( here,  'ModelDDvlPlone', 'ModelDDvlPlone_navegara_action_label', 'Navegar a');            
            pPermiteModificarElementos        pPermiteEditarElementos | pPermiteOrdenarElementos | pPermiteEliminarElementos" 
            tal:condition="python: TRAVRES and SRES">

                <tal:block tal:condition="pSiempre | TRAVRES/elements" >
                                     
                    <table id="sortable" width="100%%"  class="listing" summary="#"  
                        tal:attributes="summary SRES/values_by_name/title/uvalue"            
                        tal:define="global unIndexClassFila python: 0; global unasClasesFilas  python: ('odd','even')" >
    
                        <thead>
                            <tr>
                                <th class="nosort" align="center" /> 
                                <th class="nosort" align="left" tal:repeat="unColumnName TRAVRES/column_names" tal:content="python: TRAVRES[ 'column_translations'].get( unColumnName, {}).get( 'translated_label', unColumnName)" />
                            </tr>
                        </thead>
                        <tbody >
                            <tal:block tal:repeat="unIndexElemento python: range( len( TRAVRES[ 'elements']))"  >                  
                                <tr id="#"  class="#" 
                                    tal:define="
                                        ERES          python: TRAVRES[ 'elements'][ unIndexElemento];
                                        unTitle       python: '%s %s %s %s (%s)' % ( 
                                            pNavegarALabel, 
                                            ERES[ 'type_translations'][ 'translated_archetype_name'],
                                            ERES[ 'values_by_name'][ 'title'][ 'uvalue'], 
                                            ERES[ 'values_by_name'].get( 'description', {}).get( 'uvalue', ''),
                                            ERES[ 'type_translations'][ 'translated_type_description'])"
                                    tal:attributes="
                                        id python: ERES[ 'id'];
                                        class python: ' draggable %s' % unasClasesFilas[unIndexClassFila % 2]">                        
                                    <td align="left" valign="baseline" >
                                        <img src="#" tal:attributes="src python: '%s/%s' % ( here.portal_url(), ERES[ 'content_icon']);
                                            alt python: ERES[ 'values_by_name'][ 'title'][ 'uvalue'];
                                            title unTitle"  
                                            alt="#" title="#" id="icon-elemento" />
                                    </td>
                                    <tal:block tal:repeat="unColumnName TRAVRES/column_names" >
                                        <td align="left" valign="baseline" >
                                            <tal:block tal:condition="python: ( unColumnName == 'title') or ( unColumnName.lower().find('title') >= 0) or not ( 'title' in TRAVRES[ 'column_names']) and  (unColumnName == TRAVRES[ 'column_names'][ 0])" >  
                                                <a  name="#" href="#" title="#"
                                                    tal:define="
                                                        unTitle python: '%s %s %s %s %s (%s)' % ( 
                                                            pNavegarALabel, 
                                                            ERES[ 'type_translations'][ 'translated_archetype_name'],
                                                            ERES[ 'values_by_name'][ unColumnName][ 'uvalue'], 
                                                            ( not ( unColumnName == 'title') and  ERES[ 'values_by_name'].get( 'title', {}).get( 'uvalue', '')) or '', 
                                                            ( not ( unColumnName == 'description') and  ERES[ 'values_by_name'].get( 'description', {}).get( 'uvalue', '')) or '',
                                                            ERES[ 'type_translations'][ 'translated_type_description'])"
                                                        tal:attributes="
                                                            name string:elemento-${ERES/UID};
                                                            href python: '%s' % (ERES[ 'url']); 
                                                            title unTitle"                                                                            
                                                        class="state-visible" > 
                                                    <h4> 
                                                        <span  class="state-visible" tal:content="python: ERES[ 'values_by_name'][ unColumnName][ 'uvalue']" />
                                                    </h4>
                                                </a>
                                            </tal:block>
                                            <tal:block tal:condition="python: not (( unColumnName == 'title') or ( unColumnName.lower().find('title') >= 0) or not ( 'title' in TRAVRES[ 'column_names']) and  (unColumnName == TRAVRES[ 'column_names'][ 0]))" >
                                                <tal:block tal:define="unAttributeResult python: ERES[ 'values_by_name'].get( unColumnName, {})"
                                                    tal:condition="unAttributeResult" >
    
                                                    <tal:block tal:condition="python: unAttributeResult[ 'type'] in [ 'selection', 'boolean']">
                                                        <tal:block tal:content="unAttributeResult/translated_value" />
                                                    </tal:block>
                                                    <tal:block tal:condition="python: not( unAttributeResult[ 'type'] in [ 'selection', 'boolean']) and unAttributeResult[ 'uvalue'] and not (unAttributeResult[ 'uvalue'] =='None')">
                                                       <tal tal:content="unAttributeResult/uvalue" />
                                                    </tal:block>
    
                                                </tal:block>
    
                                            </tal:block>
                                        </td>
                                    </tal:block>
                                    <tal tal:define="global  unIndexClassFila   python: unIndexClassFila + 1" />
                                            
                                </tr>
                            </tal:block>
                        </tbody>
    
                    </table>
                    
                    <br/> 
                </tal:block>  
            </tal:block>  
        
    </div>        

    
    
    
    
    
    
    
    
</body>
</html>
    