<tal:block replace="nothing">
# File: MDDVerificationReport_i18n_view.pt
#

#
# Copyright (c) 2008, 2009, 2010, 2011  by Model Driven Development sl and Antonio Carrasco Valero
#
# GNU General Public License (GPL)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# Authors: 
# Model Driven Development sl  Valencia (Spain) www.ModelDD.org 
# Antonio Carrasco Valero                       carrasco@ModelDD.org
#
#
</tal:block>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en">
<body>                     

                             
    <div metal:define-macro="tMDDVerificationReport_i18n" >

            
        <tal:block tal:define="
            pVerifyOrInitResult pVerificationResult | nothing;
            pVerifyOrInitAction pVerifyOrInitAction | string:Verify" >
            <metal:block metal:use-macro="here/MDDVerificationReport_i18n_view/macros/tMDDVerificationOrInitializationReport_i18n" />   
        </tal:block>
            
                
    </div>   
      
    
    <div metal:define-macro="tMDDInitializationReport_i18n" >

            
        <tal:block tal:define="
            pVerifyOrInitResult pInicializationResult | nothing;
            pVerifyOrInitAction pVerifyOrInitAction | string:Initialize" > 
            <metal:block metal:use-macro="here/MDDVerificationReport_i18n_view/macros/tMDDVerificationOrInitializationReport_i18n" />   
        </tal:block>
            
                
    </div>   
      
    
        
    
    
                             
    <div metal:define-macro="tMDDVerificationOrInitializationReport_i18n" >
        
        <tal:block 
            i18n:domain="ModelDDvlPlone"
            tal:define="
                pVerifyOrInitResult      pVerifyOrInitResult | nothing;
                pOverallSuccess          python: pVerifyOrInitResult and pVerifyOrInitResult.get( 'success', False);
                pVerifyOrInitAction      pVerifyOrInitAction | string:Verify or Initialize-;
                pVerifyOrInitName        pVerifyOrInitName   | string:Unknown component Name" >
       
            <h2>
                <span i18n:translate="" tal:content="pVerifyOrInitAction"/>
                &ensp;
                <span tal:content="pVerifyOrInitName" />

                <tal:block tal:condition="not: pVerifyOrInitResult" >
                    <font  color="red">
                        <span i18n:translate="" tal:content="pVerifyOrInitAction"/>
                        &ensp;
                        <span tal:content="pVerifyOrInitName" />
                        &ensp;
                        <strong i18n:translate="ModelDDvlPlone_Error_NoResult_msgid" >No result obtained-</strong>
                    </font>
                </tal:block>
                
                <tal:block tal:condition="pVerifyOrInitResult" >
                    <font tal:condition="pOverallSuccess"  color="green">
                       <strong i18n:translate="ModelDDvlPlone_Success_msgid">Success-</strong>
                    </font>
                    <font tal:condition="not: pOverallSuccess" color="red">
                       <strong i18n:translate="ModelDDvlPlone_Failure_msgid">Failure-</strong>
                    </font>
                </tal:block>    
            </h2>
            
            <br/>

            <tal:block tal:condition="pVerifyOrInitResult" >
            
                <p tal:define="pCondition python: pVerifyOrInitResult.get( 'condition', '')" tal:condition="pCondition">
                    <strong i18n:translate="gvSIGi18n_VerifyOrInitialize_Status_Label" >Condition-</strong>
                    &ensp;
                    <font color="red" tal:content="python: pCondition" />
                </p>
                
                <tal:block tal:define="pException python: pVerifyOrInitResult.get( 'exception', '')" tal:condition="pException">
                    <p>
                        <strong i18n:translate="gvSIGi18n_VerifyOrInitialize_Exception_Label" >Exception-</strong>
                    </p>
                    <textarea readonly style="font-size: 8pt"  cols="80"  rows="#"
                        tal:define="pExceptionLines python: pException.splitlines()" 
                        tal:attributes="rows python: max( 2, min( len( pExceptionLines), 20))">
<tal:block tal:repeat="pExceptionLine pExceptionLines" tal:content="pExceptionLine"/>
</textarea>
                </tal:block>
            </tal:block>
            
            
            
            <tal:block tal:define="pVerifyOrInitResult_ToolSingletons python: pVerifyOrInitResult.get( 'tool_singletons', None)">
                <metal:block metal:use-macro="here/MDDVerificationReport_i18n_view/macros/tMDDVerificationOrInitializationReport_ToolSingletons_i18n" />   
            </tal:block>
                    
            
            
            <tal:block tal:define="pVerifyOrInitResult_ExternalMethods python: pVerifyOrInitResult.get( 'external_methods', None)">
                <metal:block metal:use-macro="here/MDDVerificationReport_i18n_view/macros/tMDDVerificationOrInitializationReport_ExternalMethods_i18n" />   
            </tal:block>
            
        </tal:block>
        
    </div>
    

    
    

    
                             
    <div metal:define-macro="tMDDVerificationOrInitializationReport_ToolSingletons_i18n" >
        
        <tal:block tal:define="
            unasClasesFilas  python: ('odd','even');
            pVerifyOrInitResult_ToolSingletons      pVerifyOrInitResult_ToolSingletons | nothing;
            pVerifyOrInitAction_ToolSingletons      pVerifyOrInitAction | string:Verify or Initialize-;
            pIsInitialization                       python: pVerifyOrInitAction_ToolSingletons == 'Initialize'" >
       
            <h3>
                <span i18n:translate="pVerifyOrInitAction_ToolSingletons" />
                &nbsp;
                <span i18n:translate="ModelDDvlPlone_VerifyOrInitializeSectionTitle_ToolSingletons_msgid" >Tool Singletons</span>
                &nbsp;
                
                <span tal:condition="not: pVerifyOrInitResult_ToolSingletons" >
                    <font  color="red">
                        <strong i18n:translate="ModelDDvlPlone_Error_NoResult_msgid" >No result obtained-</strong>
                    </font>
                </span>
                
                <tal:block tal:condition="pVerifyOrInitResult_ToolSingletons" >
                    <span tal:define="pOverallSuccess python: pVerifyOrInitResult_ToolSingletons.get( 'success', False)" >                        
                        <font tal:condition="pOverallSuccess" color="green">
                           <strong i18n:translate="ModelDDvlPlone_Success_msgid" >Success-</strong>
                        </font>
                        <font tal:condition="not: pOverallSuccess" color="red">
                           <strong i18n:translate="ModelDDvlPlone_Failure_msgid" >Failure-</strong>
                       </font>
                    </span>
                </tal:block>    
            </h3>

            <tal:block tal:condition="pVerifyOrInitResult_ToolSingletons" >
            
            
                <tal:block tal:define="pException python: pVerifyOrInitResult_ToolSingletons.get( 'exception', '')" tal:condition="pException">
                    <p>
                        <strong i18n:translate="gvSIGi18n_VerifyOrInitialize_Exception_Label" >Exception-</strong>
                    </p>
                    <textarea readonly style="font-size: 8pt"  cols="80"  rows="#"
                        tal:define="pExceptionLines python: pException.splitlines()" 
                        tal:attributes="rows python: max( 2, min( len( pExceptionLines), 20))">
<tal:block tal:repeat="pExceptionLine pExceptionLines" tal:content="pExceptionLine"/>
</textarea>
                </tal:block>
            
                        
                <tal:block tal:define="pToolSingletons python:  pVerifyOrInitResult_ToolSingletons.get( 'tools', [])" >
                    <tal:block tal:condition="not: pToolSingletons">
                        <p>
                            <strong i18n:translate="ModelDDvlPlone_Verification_NoToolSingletons_msgid',   'No Tool Singletons-' )" />
                        </p>
                    </tal:block>
                    <tal:block tal:condition="pToolSingletons">
                        <p>
                            <strong tal:content="python: '%d' %  len( pToolSingletons)" />
                            &ensp;
                            <strong i18n:translate="ModelDDvlPlone_Verification_ToolSingletonsNumber_msgid" >Tool Singletons-</strong>
                        </p>
                        <table tal:define="global unIndexClassFila python: 0"
                            id="id_VerificationOrInitializationReport_ToolSingletons_Table" class="listing" summary="#"  tal:attributes="summary string:Verification or Initialization Report ToolSingletons">
                            <thead>
                                <tr >
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Success_msgid" >Success-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_Required_msgid" >Required-</th>                                    
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Status_msgid" >Status-</th>
                                    <th tal:condition="pIsInitialization" class="sortable" i18n:translate="ModelDDvlPlone_Committed_msgid" >Committed-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_ToolSingleton_Id_msgid" >Id-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_ToolModule_msgid" >Module</th>                                           
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_ToolClass_msgid" >Class-</th>                                           
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_InstallPath_msgid" >Install Path-</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tal:block  tal:repeat="pToolSingleton pToolSingletons" >
                                    <tr class="#" tal:attributes="class python: unasClasesFilas[unIndexClassFila % 2]" >
                                        <td tal:define="pToolSingletonSuccess python: pToolSingleton.get( 'success', False)">
                                            <font tal:condition="pToolSingletonSuccess" color="green">
                                                <strong i18n:translate="ModelDDvlPlone_True',   'True-' )"  >True</strong>
                                            </font>
                                            <font tal:condition="not: pToolSingletonSuccess" color="red">
                                                <strong i18n:translate="ModelDDvlPlone_False',  'False-' )" >False</strong>
                                            </font>
                                        </td>
                                        <td tal:content="python: pToolSingleton.get( 'required', '') " />
                                        <td tal:content="python: pToolSingleton.get( 'status', '')" />
                                        <td tal:condition="pIsInitialization"  tal:content="python: pToolSingleton.get( 'committed', '')" />
                                        <td tal:content="python: pToolSingleton.get( 'singleton_id', '')" />
                                        <td tal:content="python: pToolSingleton.get( 'tool_module', '')" />
                                        <td tal:content="python: pToolSingleton.get( 'tool_class', '')" />
                                        <td tal:content="python: '/ '.join( pToolSingleton.get( 'install_path', []))" />
                                    </tr>
                                    <tal tal:define="global  unIndexClassFila   python: unIndexClassFila + 1" />
                                </tal:block>
                            </tbody>
                        </table>
                        <br/>
                        <br/>
                    </tal:block>
                </tal:block>                            
            </tal:block>
        </tal:block>
        <br/>
    </div>
    
    
    
    
    
    
    
    

    
                             
    <div metal:define-macro="tMDDVerificationOrInitializationReport_ExternalMethods_i18n" >
        
        <tal:block tal:define="
            pVerifyOrInitResult_ExternalMethods      pVerifyOrInitResult_ExternalMethods | nothing;
            pVerifyOrInitAction_ExternalMethods      pVerifyOrInitAction | string:Verify or Initialize-;
            pIsInitialization                        python: pVerifyOrInitAction_ExternalMethods == 'Initialize'" >
       
            <h3>
                <span i18n:translate="" tal:content="pVerifyOrInitAction_ExternalMethods" />
                &ensp;
                <span i18n:translate="ModelDDvlPlone_VerifyOrInitializeSectionTitle_ExternalMethods_msgid" >External Methods-</span>
                &nbsp;
                <span tal:condition="not: pVerifyOrInitResult_ExternalMethods" >
                    <font  color="red">
                        <strong  i18n:translate="ModelDDvlPlone_Error_NoResult_msgid" >No result obtained-</strong>
                    </font>
                </span>
                <tal:block tal:condition="pVerifyOrInitResult_ExternalMethods" >
                    <span tal:define="pOverallSuccess python: pVerifyOrInitResult_ExternalMethods.get( 'success', False)" >                        
                        <font tal:condition="pOverallSuccess" color="green">
                           <strong i18n:translate="ModelDDvlPlone_Success_msgid" >Success-</strong>
                        </font>
                        <font tal:condition="not: pOverallSuccess" color="red">
                           <strong i18n:translate="ModelDDvlPlone_Failure_msgid" >Failure-</strong>
                       </font>
                    </span>
                </tal:block>    
            </h3>
            
            <tal:block tal:condition="pVerifyOrInitResult_ExternalMethods" >
            
                <tal:block tal:define="pException python: pVerifyOrInitResult_ExternalMethods.get( 'exception', '')" tal:condition="pException">
                    <p>
                        <strong i18n:translate="gvSIGi18n_VerifyOrInitialize_Exception_Label" >Exception-</strong>
                    </p>
                    <textarea readonly style="font-size: 8pt"  cols="80"  rows="#"
                        tal:define="pExceptionLines python: pException.splitlines()" 
                        tal:attributes="rows python: max( 2, min( len( pExceptionLines), 20))">
<tal:block tal:repeat="pExceptionLine pExceptionLines" tal:content="pExceptionLine"/>
</textarea>
                </tal:block>
            
                 
                        
                <tal:block tal:define="pExternalMethods python:  pVerifyOrInitResult_ExternalMethods.get( 'methods', [])" >
                    <tal:block tal:condition="not: pExternalMethods">
                        <p>
                            <strong i18n:translate="ModelDDvlPlone_Verification_NoExternalMethods_msgid',   'No External Methods-' )" />
                        </p>
                    </tal:block>
                    <tal:block tal:condition="pExternalMethods">
                        <p>
                            <strong tal:content="python: '%d' % len( pExternalMethods)" />
                            <strong i18n:translate="ModelDDvlPlone_Verification_ExternalMethodsNumber_msgid" >External Methods-</strong>
                        </p>
                        <table id="id_VerificationOrInitializationReport_ExternalMethods_Table" class="listing" summary="#"  tal:attributes="summary string:Verification or Initialization Report ExternalMethods">

                            <thead>
                                <tr>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Success_msgid" >Success-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_Required_msgid" >Required-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Status_msgid" >Status-</th>
                                    <th tal:condition="pIsInitialization"  class="sortable" i18n:translate="ModelDDvlPlone_Committed_msgid" >Committed-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_ExtMethod_Module_msgid" >Module-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_ExtMethod_Function_msgid" >Function-</th>                                            
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_ExtMethod_Id_msgid" >Id-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_ExtMethod_Title_msgid" >Title-</th>
                                    <th class="sortable" i18n:translate="ModelDDvlPlone_Verification_InstallPath_msgid" >Install Path-</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr tal:repeat="pExternalMethod pExternalMethods" >
                                    <td tal:define="pExternalMethodSuccess python: pExternalMethod.get( 'success', False)">
                                        <font tal:condition="pExternalMethodSuccess" color="green">
                                           <strong i18n:translate="ModelDDvlPlone_Success_msgid" >Success-</strong>
                                        </font>
                                        <font tal:condition="not: pExternalMethodSuccess" color="red">
                                           <strong i18n:translate="ModelDDvlPlone_Failure_msgid" >Failure-</strong>
                                       </font>
                                    </td>
                                    <td tal:content="python: pExternalMethod.get( 'required', '')" />
                                    <td tal:content="python: pExternalMethod.get( 'status', '')" />
                                    <td tal:condition="pIsInitialization"  tal:content="python: pExternalMethod.get( 'committed', '')" />
                                    <td tal:content="python: pExternalMethod.get( 'ext_method_module', '')" />
                                    <td tal:content="python: pExternalMethod.get( 'ext_method_function', '')" />
                                    <td tal:content="python: pExternalMethod.get( 'ext_method_id', '')" />
                                    <td tal:content="python: pExternalMethod.get( 'ext_method_title', '')" />
                                    <td tal:content="python: '/ '.join( pExternalMethod.get( 'install_path', []))" />
                                </tr>
                            </tbody>
                        </table>
                        <br/>
                        <br/>
                    </tal:block>
                </tal:block>                            
            </tal:block>
        </tal:block>
        
    </div>
    
    
        

</body>
</html>
